name: CICD Prod

on:
  push:
    branches: ['master']
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-name }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-
            
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
        
      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
            
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

  build:
    runs-on: ubuntu-latest

    needs: prepare

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        
      - name: Generate App AAB
        env:
          REACT_APP_SECRETE: ${{ secrets.REACT_APP_SECRETE }}
          REACT_APP_ONESIGINAL_APP_ID: ${{ secrets.REACT_APP_ONESIGINAL_APP_ID }}
          REACT_APP_MARVEL_PUBLIC_KEY: ${{ secrets.REACT_APP_MARVEL_PUBLIC_KEY }}
          REACT_APP_MARVEL_PRIVATE_KEY: ${{ secrets.REACT_APP_MARVEL_PRIVATE_KEY }}
        run: |
          cd android && ./gradlew bundleRelease --no-daemon
          
      - name: Sign APK
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/bundle/release/
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: Signed Bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: Signed Bundle
