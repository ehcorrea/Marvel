name: CI

on:
  workflow_dispatch: # To trigger manual build

  release:
    types: [published] # only run the workflow when a new release has been published

  pull_request:
    branches:
      - main

jobs:
  ci:
    name: CI

    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository

        uses: actions/checkout@v2

      - name: Get yarn cache directory path

        id: yarn-cache-dir-path

        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache

        uses: actions/cache@v2

        id: yarn-cache

        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies

        run: yarn install --frozen-lockfile

      - name: Run Linter

        run: yarn lint

      - name: Run Tests

        run: yarn test

      - name: Set up our JDK environment

        uses: actions/setup-java@v1.4.3

        with:
          java-version: 11

      - name: Cache Gradle Wrapper

        uses: actions/cache@v2

        with:
          path: ~/.gradle/wrapper

          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies

        uses: actions/cache@v2

        with:
          path: ~/.gradle/caches

          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable

        run: cd android && chmod +x ./gradlew

      - name: Generate App APK

        env:
          REACT_APP_SECRETE: ${{ secrets.REACT_APP_SECRETE }}
          REACT_APP_ONESIGINAL_APP_ID: ${{ secrets.REACT_APP_ONESIGINAL_APP_ID }}
          REACT_APP_MARVEL_PUBLIC_KEY: ${{ secrets.REACT_APP_MARVEL_PUBLIC_KEY }}
          REACT_APP_MARVEL_PRIVATE_KEY: ${{ secrets.REACT_APP_MARVEL_PRIVATE_KEY }}

        run: |
          cd android && ./gradlew assembleRelease --no-daemon

      - name: Sign APK

        id: sign_app

        uses: r0adkll/sign-android-release@v1

        with:
          releaseDirectory: android/app/build/outputs/apk/release

          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}

          alias: ${{ secrets.ANDROID_ALIAS }}

          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}

          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

        - name: Save Artifact

          env:
            ARTIFACT_SIGNED: ${{steps.sign_app.outputs.signedReleaseFile}}

          run: |
            mkdir -p ./artifact
            echo $ARTIFACT_SIGNED > ./artifact/artifact_signed

        - uses: actions/upload-artifact@v3

          with:
            name: artifact_signed

            path: artifact/